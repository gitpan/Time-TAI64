taia(3)                                                   taia(3)



NNAAMMEE
       taia - manipulate times with 1-attosecond precision

SSYYNNTTAAXX
       ##iinncclluuddee <<ttaaiiaa..hh>>

       double ttaaiiaa__aapppprrooxx(&_t);
       double ttaaiiaa__ffrraacc(&_t);
       void ttaaiiaa__ttaaii(&_t,&_s_e_c);

       int ttaaiiaa__lleessss(&_a,&_b);
       void ttaaiiaa__aadddd(&_t,&_a,&_b);
       void ttaaiiaa__ssuubb(&_t,&_a,&_b);
       void ttaaiiaa__hhaallff(&_t,&_a);

       unsigned int ttaaiiaa__ffmmttffrraacc(_s,&_t);

       struct taia _t;
       struct taia _a;
       struct taia _b;
       struct tai _s_e_c;
       char *_s;

DDEESSCCRRIIPPTTIIOONN
       A  ssttrruucctt  ttaaiiaa  stores an integer between 0 inclusive and
       2^64x10^18  exclusive.   The  format  of  ssttrruucctt  ttaaiiaa  is
       designed  to  speed  up  common  operations;  applications
       should not look inside ssttrruucctt ttaaiiaa.

       A ssttrruucctt ttaaiiaa variable is commonly used to store a TAI64NA
       label.   Each  TAI64NA  label  refers to one attosecond of
       real time; see  hhttttpp::////ppoobbooxx..ccoomm//~~ddjjbb//pprroottoo//ttaaii6644..ttxxtt  for
       more information.  The integer in the ssttrruucctt ttaaiiaa is 10^18
       times the second count, plus  10^9  times  the  nanosecond
       count, plus the attosecond count.

       A  ssttrruucctt  ttaaiiaa  variable  may  also  be used to store the
       numerical difference between two TAI64NA labels.

AARRIITTHHMMEETTIICC
       ttaaiiaa__aapppprrooxx returns a  double-precision  approximation  to
       _t/10^18.  The result of ttaaiiaa__aapppprrooxx is always nonnegative.

       ttaaiiaa__ttaaii places into _s_e_c the integer part of _t/10^18.

       ttaaiiaa__ffrraacc returns a double-precision approximation to  the
       fraction  part  of  _t/10^18.   The  result of ttaaiiaa__ffrraacc is
       always nonnegative.

       ttaaiiaa__lleessss returns 1 if _a is smaller than _b, 0 otherwise.

       ttaaiiaa__aadddd adds _a and  _b  modulo  2^64x10^18  and  puts  the
       result into _t.  The inputs and outputs may overlap.

       ttaaiiaa__ssuubb subtracts _b from _a modulo 2^64x10^18 and puts the
       result into _t.  The inputs and outputs may overlap.

       ttaaiiaa__hhaallff divides _a by 2,  rounding  down,  and  puts  the
       result into _t.  The input and output may overlap.

FFOORRMMAATTTTIINNGG
       ttaaiiaa__ffmmttffrraacc  prints  the  remainder of _t/10^18, padded to
       exactly 18 digits, into the character buffer _s, without  a
       terminating  NUL.  It returns 18, the number of characters
       written.  _s may be  zero;  then  ttaaiiaa__ffmmttffrraacc  returns  18
       without printing anything.

       The  macro  TTAAIIAA__FFMMTTFFRRAACC  is defined as 19; this is enough
       space for the output of  ttaaiiaa__ffmmttffrraacc  and  a  terminating
       NUL.

SSEEEE AALLSSOO
       taia_now(3), taia_pack(3), tai(3)



                                                          taia(3)
